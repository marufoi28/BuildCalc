name: Deploy CI/CD

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build_and_deploy:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    
    steps:
      # GitHubのリポジトリにアクセス
      - name: Checkout repository
        uses: actions/checkout@v3

      # GCPの認証情報を設定
      - name: Set up GCP credentials
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} 

      # Dockerをセットアップ
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # イメージをビルド
      - name: Build Docker image
        run: |
          docker build -f Dockerfile.staging -t ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.REPOSITORY }}/dotnetvue:latest .
      
      # サービスアカウントの認証を明示的に行う
      - name: Authenticate service account
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" > /tmp/key.json
          gcloud auth activate-service-account --key-file=/tmp/key.json
      
      # サービスアカウントの確認
      - name: Check Service Account
        run: |
          gcloud auth list

      # Artifact RegistryにPush
      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.REPOSITORY }}/dotnetvue:latest

      # Cloud Runにデプロイ
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy dotnetvue \
            --image ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.REPOSITORY }}/dotnetvue:latest \
            --platform managed \
            --region ${{ secrets.REGION }} \
            --allow-unauthenticated \
            --timeout=15m  # Cloud Runのデプロイタイムアウトを15分に設定
